package galoisfield

// elements shows elements of GF(2^8)
var elements = [256]GaloisFieldElement{
	0b0000_0000, // 0
	0b0000_0001, // 1
	0b0000_0010, // α^1
	0b0000_0100, // α^2
	0b0000_1000, // α^3
	0b0001_0000, // α^4
	0b0010_0000, // α^5
	0b0100_0000, // α^6
	0b1000_0000, // α^7
	0b0001_1101, // α^8
	0b0011_1010, // α^9
	0b0111_0100, // α^10
	0b1110_1000, // α^11
	0b1100_1101, // α^12
	0b1000_0111, // α^13
	0b0001_0011, // α^14
	0b0010_0110, // α^15
	0b0100_1100, // α^16
	0b1001_1000, // α^17
	0b0010_1101, // α^18
	0b0101_1010, // α^19
	0b1011_0100, // α^20
	0b0111_0101, // α^21
	0b1110_1010, // α^22
	0b1100_1001, // α^23
	0b1000_1111, // α^24
	0b0000_0011, // α^25
	0b0000_0110, // α^26
	0b0000_1100, // α^27
	0b0001_1000, // α^28
	0b0011_0000, // α^29
	0b0110_0000, // α^30
	0b1100_0000, // α^31
	0b1001_1101, // α^32
	0b0010_0111, // α^33
	0b0100_1110, // α^34
	0b1001_1100, // α^35
	0b0010_0101, // α^36
	0b0100_1010, // α^37
	0b1001_0100, // α^38
	0b0011_0101, // α^39
	0b0110_1010, // α^40
	0b1101_0100, // α^41
	0b1011_0101, // α^42
	0b0111_0111, // α^43
	0b1110_1110, // α^44
	0b1100_0001, // α^45
	0b1001_1111, // α^46
	0b0010_0011, // α^47
	0b0100_0110, // α^48
	0b1000_1100, // α^49
	0b0000_0101, // α^50
	0b0000_1010, // α^51
	0b0001_0100, // α^52
	0b0010_1000, // α^53
	0b0101_0000, // α^54
	0b1010_0000, // α^55
	0b0101_1101, // α^56
	0b1011_1010, // α^57
	0b0110_1001, // α^58
	0b1101_0010, // α^59
	0b1011_1001, // α^60
	0b0110_1111, // α^61
	0b1101_1110, // α^62
	0b1010_0001, // α^63
	0b0101_1111, // α^64
	0b1011_1110, // α^65
	0b0110_0001, // α^66
	0b1100_0010, // α^67
	0b1001_1001, // α^68
	0b0010_1111, // α^69
	0b0101_1110, // α^70
	0b1011_1100, // α^71
	0b0110_0101, // α^72
	0b1100_1010, // α^73
	0b1000_1001, // α^74
	0b0000_1111, // α^75
	0b0001_1110, // α^76
	0b0011_1100, // α^77
	0b0111_1000, // α^78
	0b1111_0000, // α^79
	0b1111_1101, // α^80
	0b1110_0111, // α^81
	0b1101_0011, // α^82
	0b1011_1011, // α^83
	0b0110_1011, // α^84
	0b1101_0110, // α^85
	0b1011_0001, // α^86
	0b0111_1111, // α^87
	0b1111_1110, // α^88
	0b1110_0001, // α^89
	0b1101_1111, // α^90
	0b1010_0011, // α^91
	0b0101_1011, // α^92
	0b1011_0110, // α^93
	0b0111_0001, // α^94
	0b1110_0010, // α^95
	0b1101_1001, // α^96
	0b1010_1111, // α^97
	0b0100_0011, // α^98
	0b1000_0110, // α^99
	0b0001_0001, // α^100
	0b0010_0010, // α^101
	0b0100_0100, // α^102
	0b1000_1000, // α^103
	0b0000_1101, // α^104
	0b0001_1010, // α^105
	0b0011_0100, // α^106
	0b0110_1000, // α^107
	0b1101_0000, // α^108
	0b1011_1101, // α^109
	0b0110_0111, // α^110
	0b1100_1110, // α^111
	0b1000_0001, // α^112
	0b0001_1111, // α^113
	0b0011_1110, // α^114
	0b0111_1100, // α^115
	0b1111_1000, // α^116
	0b1110_1101, // α^117
	0b1100_0111, // α^118
	0b1001_0011, // α^119
	0b0011_1011, // α^120
	0b0111_0110, // α^121
	0b1110_1100, // α^122
	0b1100_0101, // α^123
	0b1001_0111, // α^124
	0b0011_0011, // α^125
	0b0110_0110, // α^126
	0b1100_1100, // α^127
	0b1000_0101, // α^128
	0b0001_0111, // α^129
	0b0010_1110, // α^130
	0b0101_1100, // α^131
	0b1011_1000, // α^132
	0b0110_1101, // α^133
	0b1101_1010, // α^134
	0b1010_1001, // α^135
	0b0100_1111, // α^136
	0b1001_1110, // α^137
	0b0010_0001, // α^138
	0b0100_0010, // α^139
	0b1000_0100, // α^140
	0b0001_0101, // α^141
	0b0010_1010, // α^142
	0b0101_0100, // α^143
	0b1010_1000, // α^144
	0b0100_1101, // α^145
	0b1001_1010, // α^146
	0b0010_1001, // α^147
	0b0101_0010, // α^148
	0b1010_0100, // α^149
	0b0101_0101, // α^150
	0b1010_1010, // α^151
	0b0100_1001, // α^152
	0b1001_0010, // α^153
	0b0011_1001, // α^154
	0b0111_0010, // α^155
	0b1110_0100, // α^156
	0b1101_0101, // α^157
	0b1011_0111, // α^158
	0b0111_0011, // α^159
	0b1110_0110, // α^160
	0b1101_0001, // α^161
	0b1011_1111, // α^162
	0b0110_0011, // α^163
	0b1100_0110, // α^164
	0b1001_0001, // α^165
	0b0011_1111, // α^166
	0b0111_1110, // α^167
	0b1111_1100, // α^168
	0b1110_0101, // α^169
	0b1101_0111, // α^170
	0b1011_0011, // α^171
	0b0111_1011, // α^172
	0b1111_0110, // α^173
	0b1111_0001, // α^174
	0b1111_1111, // α^175
	0b1110_0011, // α^176
	0b1101_1011, // α^177
	0b1010_1011, // α^178
	0b0100_1011, // α^179
	0b1001_0110, // α^180
	0b0011_0001, // α^181
	0b0110_0010, // α^182
	0b1100_0100, // α^183
	0b1001_0101, // α^184
	0b0011_0111, // α^185
	0b0110_1110, // α^186
	0b1101_1100, // α^187
	0b1010_0101, // α^188
	0b0101_0111, // α^189
	0b1010_1110, // α^190
	0b0100_0001, // α^191
	0b1000_0010, // α^192
	0b0001_1001, // α^193
	0b0011_0010, // α^194
	0b0110_0100, // α^195
	0b1100_1000, // α^196
	0b1000_1101, // α^197
	0b0000_0111, // α^198
	0b0000_1110, // α^199
	0b0001_1100, // α^200
	0b0011_1000, // α^201
	0b0111_0000, // α^202
	0b1110_0000, // α^203
	0b1101_1101, // α^204
	0b1010_0111, // α^205
	0b0101_0011, // α^206
	0b1010_0110, // α^207
	0b0101_0001, // α^208
	0b1010_0010, // α^209
	0b0101_1001, // α^210
	0b1011_0010, // α^211
	0b0111_1001, // α^212
	0b1111_0010, // α^213
	0b1111_1001, // α^214
	0b1110_1111, // α^215
	0b1100_0011, // α^216
	0b1001_1011, // α^217
	0b0010_1011, // α^218
	0b0101_0110, // α^219
	0b1010_1100, // α^220
	0b0100_0101, // α^221
	0b1000_1010, // α^222
	0b0000_1001, // α^223
	0b0001_0010, // α^224
	0b0010_0100, // α^225
	0b0100_1000, // α^226
	0b1001_0000, // α^227
	0b0011_1101, // α^228
	0b0111_1010, // α^229
	0b1111_0100, // α^230
	0b1111_0101, // α^231
	0b1111_0111, // α^232
	0b1111_0011, // α^233
	0b1111_1011, // α^234
	0b1110_1011, // α^235
	0b1100_1011, // α^236
	0b1000_1011, // α^237
	0b0000_1011, // α^238
	0b0001_0110, // α^239
	0b0010_1100, // α^240
	0b0101_1000, // α^241
	0b1011_0000, // α^242
	0b0111_1101, // α^243
	0b1111_1010, // α^244
	0b1110_1001, // α^245
	0b1100_1111, // α^246
	0b1000_0011, // α^247
	0b0001_1011, // α^248
	0b0011_0110, // α^249
	0b0110_1100, // α^250
	0b1101_1000, // α^251
	0b1010_1101, // α^252
	0b0100_0111, // α^253
	0b1000_1110, // α^254
}

type GaloisFieldElement uint8

// IsZero returns true if a is zero value
func (a GaloisFieldElement) IsZero() bool {
	return a == 0
}

// Add returns a + b
func (a GaloisFieldElement) Add(b GaloisFieldElement) GaloisFieldElement {
	return a ^ b
}

// Sub returns a - b which is equivalent to Add
func (a GaloisFieldElement) Sub(b GaloisFieldElement) GaloisFieldElement {
	return a.Add(b)
}

// Multiply returns a * b
func (a GaloisFieldElement) Multiply(b GaloisFieldElement) GaloisFieldElement {
	if a.IsZero() || b.IsZero() {
		return 0
	}
	return elements[(a.Index()+b.Index())%255+1]
}

// Divide returns a / b
func (a GaloisFieldElement) Divide(b GaloisFieldElement) GaloisFieldElement {
	if b.IsZero() {
		panic("divinding zero is invalid")
	}
	if a.IsZero() {
		return 0
	}
	newIndex := a.Index() - b.Index()
	if newIndex < 0 {
		newIndex += 255
	}
	return elements[newIndex%255+1]
}

// Index returns index n of α^n
func (a GaloisFieldElement) Index() int {
	if a.IsZero() {
		panic("invalid element value for Index()")
	}
	for i, v := range elements {
		if a == v {
			return i - 1
		}
	}
	panic("invalid element value for Index()")
}
